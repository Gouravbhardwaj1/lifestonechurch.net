{"version":3,"sources":["webpack:///./src/pages/admin/print-events/index.js"],"names":["PrintEvents","state","hiddenImages","hideImage","id","_this","setState","_Object$assign","Object","assign","shouldShowImage","render","_this2","this","data","props","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","allContentfulEvent","edges","map","_ref","node","image","src","file","url","alt","description","onClick","React","Component","query"],"mappings":"+LAKMA,sJACJC,MAAQ,CACNC,aAAc,MAGhBC,UAAY,SAAAC,GACVC,EAAKC,SAAS,SAAAL,GAAK,IAAAM,EAAA,OAAAC,OAAAC,OAAA,GACdR,EADc,CAEjBC,aAAYM,OAAAC,OAAA,GACPR,EAAMC,cADCK,EAAA,GAAAA,EAETH,IAAK,EAFIG,WAOhBG,gBAAkB,SAAAN,GAAE,QAAMC,EAAKJ,MAAMC,aAAaE,kCAElDO,kBAAS,IAAAC,EAAAC,KACCC,EAASD,KAAKE,MAAdD,KACR,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGL,EAAKM,mBAAmBC,MAAMC,IAC7B,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACEA,EAAKC,QACJb,EAAKF,gBAAgBc,EAAKpB,KACzBY,EAAAC,EAAAC,cAAA,OACEQ,IAAKF,EAAKC,MAAME,KAAKC,IACrBC,IAAKL,EAAKC,MAAMK,YAChBC,QAAS,kBAAMnB,EAAKT,UAAUqB,EAAKpB,cA5BzB4B,IAAMC,WAqCjBjC,YAER,IAAMkC,EAAK","file":"component---src-pages-admin-print-events-index-js-17dc463fb276dc6e48f2.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../../../components/layout';\n\nclass PrintEvents extends React.Component {\n  state = {\n    hiddenImages: {},\n  };\n\n  hideImage = id => {\n    this.setState(state => ({\n      ...state,\n      hiddenImages: {\n        ...state.hiddenImages,\n        [id]: true,\n      },\n    }));\n  };\n\n  shouldShowImage = id => !!this.state.hiddenImages[id];\n\n  render() {\n    const { data } = this.props;\n    return (\n      <Layout>\n        {data.allContentfulEvent.edges.map(\n          ({ node }) =>\n            node.image &&\n            !this.shouldShowImage(node.id) && (\n              <img\n                src={node.image.file.url}\n                alt={node.image.description}\n                onClick={() => this.hideImage(node.id)}\n              />\n            )\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default PrintEvents;\n\nexport const query = graphql`\n  query PrintEventsQuery {\n    allContentfulEvent(sort: { fields: [startDate], order: ASC }) {\n      edges {\n        node {\n          id\n          image {\n            description\n            file {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}